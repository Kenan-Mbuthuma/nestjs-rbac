import type { Metadata } from "next";
import { Geist, Geist_Mono } from "next/font/google";
import "./globals.css";
import Providers from "@/components/providers";

// ✅ CI-safe Amplify mock config to prevent server crash
if (process.env.NODE_ENV === "development" || process.env.CI === "true") {
  try {
    const dummyConfig = {
      Auth: {
        userPoolId: "mock",
        userPoolWebClientId: "mock",
        region: "mock",
      },
    };
    const { Amplify } = require("aws-amplify");
    Amplify.configure(dummyConfig);
    console.log("✅ Amplify configured with mock Auth (CI mode)");
  } catch (e) {
    console.warn("⚠️ Amplify mock config failed to load:", e);
  }
}

const geistSans = Geist({
  variable: "--font-geist-sans",
  subsets: ["latin"],
});

const geistMono = Geist_Mono({
  variable: "--font-geist-mono",
  subsets: ["latin"],
});

export const metadata: Metadata = {
  title: "Create Next App",
  description: "Generated by create next app",
};

export default function RootLayout({
  children,
}: Readonly<{
  children: React.ReactNode;
}>) {
  return (
    <html lang="en">
      <body className={`${geistSans.variable} ${geistMono.variable} antialiased`}>
        <Providers>{children}</Providers>
      </body>
    </html>
  );
}
